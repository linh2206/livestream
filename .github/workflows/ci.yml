name: CI (Continuous Integration)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  # Lint v√† Type Check
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/${{ matrix.app }}/package-lock.json

      - name: Install dependencies
        run: |
          cd apps/${{ matrix.app }}
          npm ci

      - name: Run linter
        run: |
          cd apps/${{ matrix.app }}
          npm run lint || true

      - name: Type check
        run: |
          cd apps/${{ matrix.app }}
          npm run type-check

  # Build Test
  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        app: [frontend, backend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/${{ matrix.app }}/package-lock.json

      - name: Install dependencies
        run: |
          cd apps/${{ matrix.app }}
          npm ci

      - name: Build application
        run: |
          cd apps/${{ matrix.app }}
          npm run build

  # Security Scan
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'

  # Docker Build Test
  docker-build:
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker Compose build
        run: docker-compose build

      - name: Test Docker Compose up
        run: |
          docker-compose up -d
          sleep 30
          docker-compose ps
          docker-compose down