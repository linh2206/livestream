name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            apps/frontend/package-lock.json
            apps/backend/package-lock.json

      - name: Install & Test Frontend
        run: |
          cd apps/frontend
          npm ci
          npm run lint || true
          npm run build

      - name: Install & Test Backend
        run: |
          cd apps/backend
          npm ci
          npm run lint:check || true
          npm run build

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        run: docker-compose build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/livestream
            git pull origin main
            docker-compose down
            docker-compose up -d --build
            docker system prune -f
          
      - name: Health Check
        run: |
          sleep 30
          curl -f http://${{ secrets.VPS_HOST }}:3000 || exit 1
          echo "âœ… Deployment successful!"
