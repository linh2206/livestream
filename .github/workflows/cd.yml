name: CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install API dependencies
      run: cd services/api && npm install

    - name: Install Frontend dependencies
      run: cd services/frontend && npm install

    - name: Run API tests
      run: cd services/api && npm test || echo "No API tests"

    - name: Run Frontend tests
      run: cd services/frontend && npm test || echo "No Frontend tests"

    - name: Build API
      run: cd services/api && npm run build

    - name: Build Frontend
      run: cd services/frontend && npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Deploy to production
      run: |
        echo "Deploying LiveStream App to production..."
        docker-compose up -d --build

    - name: Wait for services
      run: |
        echo "Waiting for services to start..."
        sleep 60

    - name: Health check
      run: |
        echo "Checking service health..."
        # Check if containers are running
        docker-compose ps
        
        # Check API health
        curl -f http://localhost:9000/health || echo "API health check failed"
        
        # Check Frontend
        curl -f http://localhost:3000 || echo "Frontend check failed"
        
        # Check Nginx
        curl -f http://localhost:8080 || echo "Nginx check failed"

    - name: Show logs on failure
      if: failure()
      run: |
        echo "Deployment failed. Showing logs..."
        docker-compose logs