name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main, develop]

jobs:
  # Deploy to Staging (develop branch)
  deploy-staging:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'develop'

    steps:
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Staging Server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.STAGING_USERNAME }}@${{ secrets.STAGING_HOST }} << 'EOF'
          sudo -i bash << 'INNER_EOF'
          cd /workspace/livestream-staging
          git pull origin develop
          docker-compose down
          docker-compose build
          docker-compose up -d
          docker-compose ps
          docker-compose logs --tail=50
          docker system prune -af --volumes
          INNER_EOF
          EOF

      - name: Health Check
        run: |
          sleep 60
          curl -f -v --retry 3 --retry-delay 10 http://${{ secrets.STAGING_HOST }}:3000

  # Deploy to Production (main branch)
  deploy-production:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'

    steps:
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Production Server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key root@${{ secrets.PRODUCTION_HOST }} << 'EOF'
          sudo -i bash << 'INNER_EOF'
          cd /workspace/livestream
          git pull origin main
          docker-compose down
          docker-compose build
          docker-compose up -d
          docker-compose ps
          docker-compose logs --tail=50
          docker system prune -af --volumes
          INNER_EOF
          EOF

      - name: Health Check
        run: |
          sleep 60
          curl -f -v --retry 3 --retry-delay 10 http://${{ secrets.PRODUCTION_HOST }}:3000

      - name: Rollback on Failure
        if: failure()
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key root@${{ secrets.PRODUCTION_HOST }} << 'EOF'
          sudo -i bash << 'INNER_EOF'
          cd /workspace/livestream
          git reset --hard HEAD~1
          docker-compose down
          docker-compose up -d --build
          INNER_EOF
          EOF
