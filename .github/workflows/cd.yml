name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main, develop]

jobs:
  # Deploy to Staging (develop branch)
  deploy-staging:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'develop'

    steps:
      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: ${{ secrets.STAGING_PORT || 22 }}
          script: |
            echo "================================================"
            echo "üöÄ DEPLOYING TO STAGING"
            echo "================================================"
            echo ""
            echo "üìÅ Step 1: Navigate to project directory"
            cd /workspace/livestream-staging || exit 1
            echo "‚úÖ Current directory: $(pwd)"
            echo ""
            echo "üì• Step 2: Pull latest code from develop branch"
            git pull origin develop
            echo "‚úÖ Code updated"
            echo ""
            echo "üõë Step 3: Stop old containers"
            docker-compose down
            echo "‚úÖ Old containers stopped"
            echo ""
            echo "üèóÔ∏è Step 4: Build and start new containers"
            docker-compose up -d --build
            echo "‚úÖ New containers started"
            echo ""
            echo "üßπ Step 5: Clean up unused Docker resources"
            docker system prune -af --volumes
            echo "‚úÖ Cleanup completed"
            echo ""
            echo "================================================"
            echo "‚úÖ DEPLOYMENT COMPLETED SUCCESSFULLY"
            echo "================================================"

      - name: Health Check
        run: |
          echo "üè• Waiting for containers to be ready..."
          sleep 30
          echo "üîç Checking health endpoint..."
          if curl -f http://${{ secrets.STAGING_HOST }}:3000; then
            echo "‚úÖ Health check passed!"
            echo "‚úÖ Staging deployment successful!"
          else
            echo "‚ùå Health check failed!"
            exit 1
          fi

  # Deploy to Production (main branch)
  deploy-production:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_PORT || 22 }}
          script: |
            echo "================================================"
            echo "üöÄ DEPLOYING TO PRODUCTION"
            echo "================================================"
            echo ""
            echo "üìÅ Step 1: Navigate to project directory"
            cd /workspace/livestream || exit 1
            echo "‚úÖ Current directory: $(pwd)"
            echo ""
            echo "üì• Step 2: Pull latest code from main branch"
            git pull origin main
            echo "‚úÖ Code updated"
            echo ""
            echo "üõë Step 3: Stop old containers"
            docker-compose down
            echo "‚úÖ Old containers stopped"
            echo ""
            echo "üèóÔ∏è Step 4: Build and start new containers"
            docker-compose up -d --build
            echo "‚úÖ New containers started"
            echo ""
            echo "üßπ Step 5: Clean up unused Docker resources"
            docker system prune -af --volumes
            echo "‚úÖ Cleanup completed"
            echo ""
            echo "================================================"
            echo "‚úÖ DEPLOYMENT COMPLETED SUCCESSFULLY"
            echo "================================================"

      - name: Health Check
        run: |
          echo "üè• Waiting for containers to be ready..."
          sleep 30
          echo "üîç Checking health endpoint..."
          if curl -f http://${{ secrets.PRODUCTION_HOST }}:3000; then
            echo "‚úÖ Health check passed!"
            echo "‚úÖ Production deployment successful!"
          else
            echo "‚ùå Health check failed!"
            exit 1
          fi

      - name: Rollback on Failure
        if: failure()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_PORT || 22 }}
          script: |
            echo "================================================"
            echo "‚ö†Ô∏è ROLLBACK IN PROGRESS"
            echo "================================================"
            echo ""
            echo "üìÅ Navigate to project directory"
            cd /workspace/livestream
            echo "‚è™ Reverting to previous version"
            git reset --hard HEAD~1
            echo "üõë Stopping failed containers"
            docker-compose down
            echo "üîÑ Starting previous version"
            docker-compose up -d --build
            echo ""
            echo "================================================"
            echo "‚úÖ ROLLBACK COMPLETED"
            echo "================================================"
