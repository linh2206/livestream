name: CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    name: Deploy to server
    runs-on: self-hosted
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare environment files
        run: |
          set -euo pipefail
          echo "Removing old .env files..."
          rm -f .env
          rm -f apps/frontend/.env
          rm -f apps/backend/.env

          echo "Copying .env.example files to .env..."
          # Root .env
          if [ -f .env.example ]; then
            cp .env.example .env
            echo "Successfully copied .env.example to .env"
          else
            echo "Error: .env.example not found"
            exit 1
          fi

          # Frontend .env
          if [ -f apps/frontend/.env.example ]; then
            cp apps/frontend/.env.example apps/frontend/.env
            echo "Successfully copied apps/frontend/.env.example to apps/frontend/.env"
          else
            echo "Warning: apps/frontend/.env.example not found"
          fi

          # Backend .env
          if [ -f apps/backend/.env.example ]; then
            cp apps/backend/.env.example apps/backend/.env
            echo "Successfully copied apps/backend/.env.example to apps/backend/.env"
          else
            echo "Warning: apps/backend/.env.example not found"
          fi

      - name: Docker compose up
        run: |
          set -e
          echo "Stopping existing containers..."
          docker compose down --remove-orphans || true

          echo "Cleaning Docker cache..."
          docker builder prune -f || true
          docker system prune -f || true

          echo "Building services..."
          docker compose build --no-cache || {
              echo "First build failed, retrying..."
              sleep 10
              docker compose build --no-cache
          }

          echo "Starting services..."
          docker compose up -d --remove-orphans || {
              echo "First start failed, retrying..."
              sleep 10
              docker compose up -d --remove-orphans
          }

          echo "Cleaning up..."
          docker image prune -f || true
          docker container prune -f || true
          docker volume prune -f || true
          docker network prune -f || true
          docker system prune -f || true
          docker system df

      - name: Health check services via Docker
        run: |
          set -e
          check_health() {
            name="$1"
            for i in $(seq 1 20); do
              status=$(docker inspect --format='{{.State.Health.Status}}' "$name" 2>/dev/null || echo 'unknown')
              echo "$name: $status"
              if [ "$status" = healthy ]; then return 0; fi
              sleep 6
            done
            return 1
          }
          check_health livestream-backend && check_health livestream-frontend && echo 'All services healthy'
