# LiveStream App - Compatible with all Docker Compose versions
# Frontend: Port 3000, Backend: Port 9000

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: livestream-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - ./data/mongodb:/data/db
      - ./config/database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: livestream-redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    restart: unless-stopped

  # NestJS API Service - Backend on Port 9000
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: livestream-api
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: 3000
      MONGODB_URI: ${MONGODB_URI}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - "9000:3000"
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped

  # Next.js Frontend Service - Frontend on Port 3000
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: livestream-frontend
    environment:
      NODE_ENV: ${NODE_ENV}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL}
      BACKEND_URL: http://api:3000
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

  # Nginx RTMP + HLS + Reverse Proxy
  nginx:
    build:
      context: ./config/nginx
      dockerfile: Dockerfile
    container_name: livestream-nginx
    ports:
      - "8080:8080"
      - "1935:1935"
    volumes:
      - ./data/hls:/var/www/html/hls
    depends_on:
      - frontend
      - api
    restart: unless-stopped