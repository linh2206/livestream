version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: livestream-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./config/database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - livestream-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: livestream-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - livestream-network

  # Nginx RTMP + HLS
  nginx:
    build:
      context: ./config/nginx
      dockerfile: Dockerfile.nginx
    container_name: livestream-nginx
    restart: unless-stopped
    ports:
      - "1935:1935"  # RTMP
      - "8080:80"    # HLS
    volumes:
      - ./apps/api/hls:/app/hls
    networks:
      - livestream-network

  # Backend API
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: livestream-api
    restart: unless-stopped
    ports:
      - "9000:9000"  # API
    environment:
      NODE_ENV: production
      PORT: 9000
      MONGODB_URI: mongodb://mongodb:27017/livestream
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      HLS_BASE_URL: http://localhost:8080/hls
      RTMP_BASE_URL: rtmp://localhost:1935
    volumes:
      - ./apps/api/hls:/app/hls
    depends_on:
      - mongodb
      - redis
    networks:
      - livestream-network

  # Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: livestream-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"  # Frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:9000/api/v1
      NEXT_PUBLIC_WS_URL: ws://localhost:9000
      NEXT_PUBLIC_HLS_URL: http://localhost:8080/hls
      NEXT_PUBLIC_RTMP_URL: rtmp://localhost:1935
    networks:
      - livestream-network

volumes:
  mongodb_data:
  redis_data:

networks:
  livestream-network:
    driver: bridge