# LiveStream App - Docker Compose v2
# Frontend: Port 3000, Backend: Port 9000

version: '3.3'

services:
  mongodb:
    image: mongo:4.4
    container_name: livestream-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: livestream
    volumes:
      - ./data/mongodb:/data/db
      - ./config/database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: livestream-redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: livestream-api
    environment:
      NODE_ENV: production
      PORT: 9000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/livestream?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-secret-key-change-this-in-production
      FRONTEND_URL: http://localhost:8080
    ports:
      - "9000:9000"
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: livestream-frontend
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://localhost:9000
      NEXT_PUBLIC_WS_URL: ws://localhost:9000
      NEXT_PUBLIC_HLS_URL: http://localhost:8080
      BACKEND_URL: http://api:9000
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: ./config/nginx
      dockerfile: Dockerfile
    container_name: livestream-nginx
    ports:
      - "8080:8080"
      - "1935:1935"
    volumes:
      - ./data/hls:/var/www/html/hls
    depends_on:
      - frontend
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/stat"]
      interval: 30s
      timeout: 10s
      retries: 3