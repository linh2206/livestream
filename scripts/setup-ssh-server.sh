#!/bin/bash

# Complete SSH Server Setup Script
set -e  # Exit on any error

echo "üîß Setting up SSH server with full configuration..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# Check if running as root
if [ "$(id -u)" != "0" ]; then
    log_error "This script must be run as root"
    exit 1
fi

# Install SSH server and dependencies
log_info "Installing SSH server and dependencies..."
apt update && apt install -y openssh-server openssh-client ssh-import-id

# Create SSH directory structure
log_info "Creating SSH directory structure..."
mkdir -p /etc/ssh
mkdir -p /var/log/ssh
mkdir -p /etc/ssh/ssh_config.d
mkdir -p /etc/ssh/sshd_config.d

# Set proper permissions
chmod 755 /etc/ssh
chmod 644 /etc/ssh/ssh_config.d
chmod 644 /etc/ssh/sshd_config.d
chmod 755 /var/log/ssh

# Backup original config
log_info "Backing up original SSH configuration..."
cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup.$(date +%Y%m%d_%H%M%S)

# Configure SSH server
log_info "Configuring SSH server..."
cat > /etc/ssh/sshd_config << 'EOF'
# SSH Server Configuration - Livestream Platform
# Generated by setup-ssh-server.sh

# Basic Configuration
Port 22
Protocol 2
AddressFamily any
ListenAddress 0.0.0.0

# Authentication
PermitRootLogin yes
PasswordAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
AuthorizedKeysCommand none
AuthorizedKeysCommandUser nobody

# Security Settings
MaxAuthTries 3
MaxSessions 10
LoginGraceTime 2m
ClientAliveInterval 300
ClientAliveCountMax 2

# Key Exchange
KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512

# Host Keys
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

# MACs
MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha2-256,hmac-sha2-512

# Logging
SyslogFacility AUTH
LogLevel INFO

# Banner and MOTD
Banner none
PrintMotd no
PrintLastLog yes

# Environment
AcceptEnv LANG LC_*
AcceptEnv TERM
AcceptEnv COLORTERM

# X11 Forwarding
X11Forwarding no
X11DisplayOffset 10
X11UseLocalhost yes

# SFTP
Subsystem sftp /usr/lib/openssh/sftp-server

# Compression
Compression delayed

# TCP KeepAlive
TCPKeepAlive yes

# Use DNS
UseDNS no

# PAM
UsePAM yes

# Include additional configs
Include /etc/ssh/sshd_config.d/*.conf
EOF

# Generate SSH host keys if they don't exist
log_info "Generating SSH host keys..."
ssh-keygen -A

# Set proper permissions on SSH files
log_info "Setting proper permissions..."
chmod 600 /etc/ssh/ssh_host_*_key
chmod 644 /etc/ssh/ssh_host_*_key.pub
chmod 644 /etc/ssh/sshd_config

# Create SSH user directory structure
log_info "Creating SSH user directories..."
for user in $(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd); do
    if [ -d "/home/$user" ]; then
        mkdir -p "/home/$user/.ssh"
        chmod 700 "/home/$user/.ssh"
        chown "$user:$user" "/home/$user/.ssh"
        
        # Create authorized_keys if it doesn't exist
        if [ ! -f "/home/$user/.ssh/authorized_keys" ]; then
            touch "/home/$user/.ssh/authorized_keys"
            chmod 600 "/home/$user/.ssh/authorized_keys"
            chown "$user:$user" "/home/$user/.ssh/authorized_keys"
        fi
    fi
done

# Configure firewall (if ufw is available)
if command -v ufw &> /dev/null; then
    log_info "Configuring firewall for SSH..."
    ufw allow ssh
    ufw allow 22/tcp
fi

# Start and enable SSH service
log_info "Starting and enabling SSH service..."
systemctl enable ssh
systemctl restart ssh

# Wait for service to start
sleep 2

# Check SSH status
if systemctl is-active --quiet ssh; then
    log_success "SSH server is running"
else
    log_error "SSH server failed to start"
    systemctl status ssh
    exit 1
fi

# Test SSH configuration
log_info "Testing SSH configuration..."
if sshd -t; then
    log_success "SSH configuration is valid"
else
    log_error "SSH configuration has errors"
    exit 1
fi

# Display connection information
echo ""
log_success "SSH Server Setup Complete!"
echo ""
echo "üìã SSH Server Information:"
echo "  ‚Ä¢ Port: 22"
echo "  ‚Ä¢ Protocol: SSH-2"
echo "  ‚Ä¢ Authentication: Password + Public Key"
echo "  ‚Ä¢ Root login: Enabled"
echo "  ‚Ä¢ Max auth tries: 3"
echo "  ‚Ä¢ Max sessions: 10"
echo ""
echo "üîó Connection Commands:"
echo "  ‚Ä¢ Local: ssh $USER@localhost"
echo "  ‚Ä¢ Remote: ssh $USER@$(hostname -I | awk '{print $1}')"
echo ""
echo "üîß Management Commands:"
echo "  ‚Ä¢ Status: systemctl status ssh"
echo "  ‚Ä¢ Restart: systemctl restart ssh"
echo "  ‚Ä¢ Config test: sshd -t"
echo "  ‚Ä¢ View logs: journalctl -u ssh"
echo ""
echo "‚ö†Ô∏è  Security Recommendations:"
echo "  ‚Ä¢ Consider disabling root login after setup"
echo "  ‚Ä¢ Use SSH keys instead of passwords"
echo "  ‚Ä¢ Change default SSH port if needed"
echo "  ‚Ä¢ Configure fail2ban for additional security"